<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="online_music_store.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="1969"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><table title="songs" custom_title="0" dock_id="1" table="4,5:mainsongs"/><dock_state state="000000ff00000000fd00000001000000020000043c000002b6fc0100000001fb000000160064006f0063006b00420072006f007700730065003101000000000000043c0000011e00ffffff000002580000000000000004000000040000000800000008fc00000000"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="artists" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="55"/><column index="2" value="148"/><column index="3" value="93"/><column index="4" value="117"/><column index="5" value="85"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="songs" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="52"/><column index="2" value="156"/><column index="3" value="57"/><column index="4" value="300"/><column index="5" value="85"/><column index="6" value="107"/><column index="7" value="102"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">--1 Retrieve the titles and release dates of all songs released in 2022, ordered by release date (newest first).

SELECT title, release_date
FROM songs
WHERE substr (release_date, -4) = '2022'
ORDER BY release_date ASC;


--2 Find all songs with a popularity score greater than 80 and a duration less than 4 minutes (240 seconds)
SELECT title, duration_seconds, popularity_score
FROM songs
WHERE popularity_score &gt; 80
	AND duration_seconds &lt;240
	ORDER BY popularity_score DESC;
	

--3 List all artists whose names start with &quot;The&quot;.
SELECT artist_id, artist_name
FROM artists 
WHERE artist_name like 'The%';

--4 Find all premium customers who joined in 2022.
 SELECT first_name, last_name,premium_member, join_date
 FROM customers
 WHERE premium_member = 'TRUE'
	AND substr(join_date,-4) = '2022'
	ORDER BY first_name ASC;
	
--5 Calculate the total duration (in minutes) of all songs in the database and display the result with an appropriate column name.
SELECT sum (duration_seconds)/60.00 AS &quot;Total Duration of Songs in minutes&quot;
FROM songs;


--6 Find the top 5 most expensive song purchases in the database.

SELECT song_id, purchase_date, price
FROM purchases
ORDER BY price DESC
LIMIT 5;

/*--7 First, find all song_ids from songs with a popularity score above 90. Then, use those song_ids to find purchases of those songs.

SELECT *
FROM purchases
WHERE song_id IN (
	SELECT song_id
	FROM songs
	WHERE popularity_score&gt; 90);
	*/

--There is another way by using JOINS

SELECT purchases.*   
FROM purchases 
JOIN songs 
ON purchases.song_id = songs. song_id 
WHERE popularity_score &gt; 90
ORDER BY price DESC; 

--8 Find all purchases made between January 1, 2023 and March 31, 2023.

SELECT *
FROM purchases
WHERE purchase_date BETWEEN '1/1/2023' AND '3/31/2023'
ORDER BY price DESC;




--9 Identify the songs with the highest popularity scores (above 90).

SELECT *
FROM songs
WHERE popularity_score &gt;90
ORDER BY popularity_score DESC;



-- For tasks 1-3, how could you combine them into a single, more complex query that finds popular short songs by artists whose names start with &quot;The&quot;?

 
SELECT songs.title, duration_seconds, popularity_score, artists.artist_name
FROM songs
JOIN artists
ON songs.artist_id = artists.artist_id
WHERE popularity_score &gt;80
	AND duration_seconds &lt;240
	AND artist_name like 'The%';





</sql><current_tab id="0"/></tab_sql></sqlb_project>
